\name{ans1}
\alias{ans1}
\docType{data}
\title{
%%   ~~ data name/kind ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of the dataset. ~~
}
\usage{data("ans1")}
\format{
  The format is:
List of 7
 $ data             :Classes 'tbl_df', 'tbl' and 'data.frame':	277390 obs. of  9 variables:
  ..$ RentalId        : int [1:277390] 66934157 66934158 66934159 66934160 66934161 66934162 66934163 66934164 66934165 66934166 ...
  ..$ Duration        : int [1:277390] 1680 1500 540 1560 1440 1500 3360 1680 960 960 ...
  ..$ BikeId          : int [1:277390] 1244 13763 13545 1858 5782 1307 1086 5278 5114 5854 ...
  ..$ EndDate         : POSIXct[1:277390], format: "2017-07-05 00:28:00" "2017-07-05 00:25:00" "2017-07-05 00:09:00" ...
  ..$ EndStationId    : int [1:277390] 394 513 723 513 513 513 374 15 128 128 ...
  ..$ EndStationName  : Factor w/ 783 levels "","Abbey Orchard Street, Westminster",..: 4 746 667 746 746 746 743 289 222 222 ...
  ..$ StartDate       : POSIXct[1:277390], format: "2017-07-05 00:00:00" "2017-07-05 00:00:00" "2017-07-05 00:00:00" ...
  ..$ StartStationId  : int [1:277390] 650 217 638 217 217 217 188 420 128 128 ...
  ..$ StartStationName: Factor w/ 781 levels "Abbey Orchard Street, Westminster",..: 654 778 233 778 778 778 486 634 221 221 ...
  ..- attr(*, "na.action")=Class 'omit'  Named int [1:3181] 37 218 221 327 433 606 710 889 1008 1033 ...
  .. .. ..- attr(*, "names")= chr [1:3181] "37" "218" "221" "327" ...
 $ hourlyRentals    :Classes 'tbl_df', 'tbl' and 'data.frame':	168 obs. of  2 variables:
  ..$ x              : POSIXct[1:168], format: "2017-07-05 00:00:00" "2017-07-05 01:00:00" "2017-07-05 02:00:00" ...
  ..$ NumberOfRentals: int [1:168] 323 195 87 86 75 189 922 2922 5137 2629 ...
 $ dailyRentals     :Classes 'tbl_df', 'tbl' and 'data.frame':	7 obs. of  2 variables:
  ..$ x              : POSIXct[1:7], format: "2017-07-05" "2017-07-06" "2017-07-07" ...
  ..$ NumberOfRentals: int [1:7] 45622 43912 43087 39711 38520 40813 25725
 $ stationJourneys  :Classes 'grouped_df', 'tbl_df', 'tbl' and 'data.frame':	105970 obs. of  5 variables:
  ..$ StartStationName: Factor w/ 781 levels "Abbey Orchard Street, Westminster",..: 1 1 1 1 1 1 1 1 1 1 ...
  ..$ EndStationName  : Factor w/ 783 levels "","Abbey Orchard Street, Westminster",..: 12 15 39 53 54 55 63 66 86 98 ...
  ..$ averageTripTime : num [1:105970] 32 11 17 16 9 51 17 20 12 31 ...
  ..$ TotalTrips      : int [1:105970] 1 1 1 1 1 1 1 1 1 1 ...
  ..$ Journey         : chr [1:105970] "Abbey Orchard Street, Westminster - Aintree Street, Fulham" "Abbey Orchard Street, Westminster - Albert Embankment, Vauxhall" "Abbey Orchard Street, Westminster - Austin Road, Battersea Park" "Abbey Orchard Street, Westminster - Bayley Street , Bloomsbury" ...
  ..- attr(*, "vars")= chr "StartStationName"
  ..- attr(*, "indices")=List of 781
  .. ..$ : int [1:191] 0 1 2 3 4 5 6 7 8 9 ...
  .. ..$ : int [1:55] 94 95 96 97 98 99 100 101 102 103 ...
  .. ..$ : int [1:101] 121 122 123 124 125 126 127 128 129 130 ...
  .. ..$ : int [1:31] 176 177 178 179 180 181 182 183 184 185 ...
  .. ..$ : int [1:235] 191 192 193 194 195 196 197 198 199 200 ...
  .. ..$ : int [1:97] 303 304 305 306 307 308 309 310 311 312 ...
  .. ..$ : int [1:70] 352 353 354 355 356 357 358 359 360 361 ...
  .. ..$ : int [1:61] 394 395 396 397 398 399 400 401 402 403 ...
  .. ..$ : int [1:152] 420 421 422 423 424 425 426 427 428 429 ...
  .. ..$ : int [1:67] 489 490 491 492 493 494 495 496 497 498 ...
  .. ..$ : int [1:115] 524 525 526 527 528 529 530 531 532 533 ...
  .. ..$ : int [1:115] 583 584 585 586 587 588 589 590 591 592 ...
  .. ..$ : int [1:165] 638 639 640 641 642 643 644 645 646 647 ...
  .. ..$ : int [1:140] 714 715 716 717 718 719 720 721 722 723 ...
  .. ..$ : int [1:135] 776 777 778 779 780 781 782 783 784 785 ...
  .. ..$ : int [1:304] 836 837 838 839 840 841 842 843 844 845 ...
  .. ..$ : int [1:122] 928 929 930 931 932 933 934 935 936 937 ...
  .. ..$ : int [1:156] 996 997 998 999 1000 1001 1002 1003 1004 1005 ...
  .. ..$ : int [1:190] 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 ...
  .. ..$ : int [1:179] 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 ...
  .. ..$ : int [1:115] 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 ...
  .. ..$ : int [1:160] 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 ...
  .. ..$ : int [1:106] 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 ...
  .. ..$ : int [1:81] 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 ...
  .. ..$ : int [1:51] 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 ...
  .. ..$ : int [1:114] 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 ...
  .. ..$ : int [1:149] 1581 1582 1583 1584 1585 1586 1587 1588 1589 1590 ...
  .. ..$ : int [1:117] 1644 1645 1646 1647 1648 1649 1650 1651 1652 1653 ...
  .. ..$ : int [1:170] 1693 1694 1695 1696 1697 1698 1699 1700 1701 1702 ...
  .. ..$ : int [1:91] 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 ...
  .. ..$ : int [1:105] 1820 1821 1822 1823 1824 1825 1826 1827 1828 1829 ...
  .. ..$ : int [1:136] 1870 1871 1872 1873 1874 1875 1876 1877 1878 1879 ...
  .. ..$ : int [1:111] 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 ...
  .. ..$ : int [1:121] 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 ...
  .. ..$ : int [1:313] 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 ...
  .. ..$ : int [1:96] 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 ...
  .. ..$ : int [1:57] 2233 2234 2235 2236 2237 2238 2239 2240 2241 2242 ...
  .. ..$ : int [1:123] 2258 2259 2260 2261 2262 2263 2264 2265 2266 2267 ...
  .. ..$ : int [1:71] 2318 2319 2320 2321 2322 2323 2324 2325 2326 2327 ...
  .. ..$ : int [1:82] 2354 2355 2356 2357 2358 2359 2360 2361 2362 2363 ...
  .. ..$ : int [1:165] 2395 2396 2397 2398 2399 2400 2401 2402 2403 2404 ...
  .. ..$ : int [1:172] 2485 2486 2487 2488 2489 2490 2491 2492 2493 2494 ...
  .. ..$ : int [1:79] 2573 2574 2575 2576 2577 2578 2579 2580 2581 2582 ...
  .. ..$ : int [1:244] 2620 2621 2622 2623 2624 2625 2626 2627 2628 2629 ...
  .. ..$ : int [1:242] 2729 2730 2731 2732 2733 2734 2735 2736 2737 2738 ...
  .. ..$ : int [1:169] 2847 2848 2849 2850 2851 2852 2853 2854 2855 2856 ...
  .. ..$ : int [1:91] 2949 2950 2951 2952 2953 2954 2955 2956 2957 2958 ...
  .. ..$ : int [1:196] 2986 2987 2988 2989 2990 2991 2992 2993 2994 2995 ...
  .. ..$ : int [1:127] 3081 3082 3083 3084 3085 3086 3087 3088 3089 3090 ...
  .. ..$ : int [1:125] 3150 3151 3152 3153 3154 3155 3156 3157 3158 3159 ...
  .. ..$ : int [1:79] 3212 3213 3214 3215 3216 3217 3218 3219 3220 3221 ...
  .. ..$ : int [1:225] 3264 3265 3266 3267 3268 3269 3270 3271 3272 3273 ...
  .. ..$ : int [1:209] 3365 3366 3367 3368 3369 3370 3371 3372 3373 3374 ...
  .. ..$ : int [1:247] 3446 3447 3448 3449 3450 3451 3452 3453 3454 3455 ...
  .. ..$ : int [1:170] 3549 3550 3551 3552 3553 3554 3555 3556 3557 3558 ...
  .. ..$ : int [1:124] 3642 3643 3644 3645 3646 3647 3648 3649 3650 3651 ...
  .. ..$ : int [1:92] 3718 3719 3720 3721 3722 3723 3724 3725 3726 3727 ...
  .. ..$ : int [1:174] 3771 3772 3773 3774 3775 3776 3777 3778 3779 3780 ...
  .. ..$ : int [1:133] 3849 3850 3851 3852 3853 3854 3855 3856 3857 3858 ...
  .. ..$ : int [1:378] 3922 3923 3924 3925 3926 3927 3928 3929 3930 3931 ...
  .. ..$ : int [1:166] 4020 4021 4022 4023 4024 4025 4026 4027 4028 4029 ...
  .. ..$ : int [1:154] 4115 4116 4117 4118 4119 4120 4121 4122 4123 4124 ...
  .. ..$ : int [1:181] 4202 4203 4204 4205 4206 4207 4208 4209 4210 4211 ...
  .. ..$ : int [1:183] 4288 4289 4290 4291 4292 4293 4294 4295 4296 4297 ...
  .. ..$ : int [1:188] 4369 4370 4371 4372 4373 4374 4375 4376 4377 4378 ...
  .. ..$ : int [1:237] 4456 4457 4458 4459 4460 4461 4462 4463 4464 4465 ...
  .. ..$ : int [1:82] 4565 4566 4567 4568 4569 4570 4571 4572 4573 4574 ...
  .. ..$ : int [1:110] 4603 4604 4605 4606 4607 4608 4609 4610 4611 4612 ...
  .. ..$ : int [1:295] 4664 4665 4666 4667 4668 4669 4670 4671 4672 4673 ...
  .. ..$ : int [1:138] 4760 4761 4762 4763 4764 4765 4766 4767 4768 4769 ...
  .. ..$ : int [1:33] 4817 4818 4819 4820 4821 4822 4823 4824 4825 4826 ...
  .. ..$ : int [1:151] 4831 4832 4833 4834 4835 4836 4837 4838 4839 4840 ...
  .. ..$ : int [1:203] 4903 4904 4905 4906 4907 4908 4909 4910 4911 4912 ...
  .. ..$ : int [1:96] 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 ...
  .. ..$ : int [1:101] 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 ...
  .. ..$ : int [1:142] 5106 5107 5108 5109 5110 5111 5112 5113 5114 5115 ...
  .. ..$ : int [1:284] 5184 5185 5186 5187 5188 5189 5190 5191 5192 5193 ...
  .. ..$ : int [1:127] 5288 5289 5290 5291 5292 5293 5294 5295 5296 5297 ...
  .. ..$ : int [1:130] 5353 5354 5355 5356 5357 5358 5359 5360 5361 5362 ...
  .. ..$ : int [1:142] 5430 5431 5432 5433 5434 5435 5436 5437 5438 5439 ...
  .. ..$ : int [1:87] 5494 5495 5496 5497 5498 5499 5500 5501 5502 5503 ...
  .. ..$ : int [1:199] 5543 5544 5545 5546 5547 5548 5549 5550 5551 5552 ...
  .. ..$ : int [1:178] 5639 5640 5641 5642 5643 5644 5645 5646 5647 5648 ...
  .. ..$ : int [1:152] 5722 5723 5724 5725 5726 5727 5728 5729 5730 5731 ...
  .. ..$ : int [1:113] 5803 5804 5805 5806 5807 5808 5809 5810 5811 5812 ...
  .. ..$ : int [1:212] 5855 5856 5857 5858 5859 5860 5861 5862 5863 5864 ...
  .. ..$ : int [1:197] 5948 5949 5950 5951 5952 5953 5954 5955 5956 5957 ...
  .. ..$ : int [1:120] 6066 6067 6068 6069 6070 6071 6072 6073 6074 6075 ...
  .. ..$ : int [1:103] 6117 6118 6119 6120 6121 6122 6123 6124 6125 6126 ...
  .. ..$ : int [1:102] 6156 6157 6158 6159 6160 6161 6162 6163 6164 6165 ...
  .. ..$ : int [1:169] 6213 6214 6215 6216 6217 6218 6219 6220 6221 6222 ...
  .. ..$ : int [1:157] 6286 6287 6288 6289 6290 6291 6292 6293 6294 6295 ...
  .. ..$ : int [1:118] 6356 6357 6358 6359 6360 6361 6362 6363 6364 6365 ...
  .. ..$ : int [1:168] 6436 6437 6438 6439 6440 6441 6442 6443 6444 6445 ...
  .. ..$ : int [1:151] 6501 6502 6503 6504 6505 6506 6507 6508 6509 6510 ...
  .. ..$ : int [1:90] 6571 6572 6573 6574 6575 6576 6577 6578 6579 6580 ...
  .. ..$ : int [1:223] 6601 6602 6603 6604 6605 6606 6607 6608 6609 6610 ...
  .. ..$ : int [1:198] 6686 6687 6688 6689 6690 6691 6692 6693 6694 6695 ...
  .. ..$ : int [1:75] 6796 6797 6798 6799 6800 6801 6802 6803 6804 6805 ...
  .. .. [list output truncated]
  ..- attr(*, "drop")= logi TRUE
  ..- attr(*, "group_sizes")= int [1:781] 191 55 101 31 235 97 70 61 152 67 ...
  ..- attr(*, "biggest_group_size")= int 378
  ..- attr(*, "labels")='data.frame':	781 obs. of  1 variable:
  .. ..$ StartStationName: Factor w/ 781 levels "Abbey Orchard Street, Westminster",..: 1 2 3 4 5 6 7 8 9 10 ...
  .. ..- attr(*, "vars")= chr "StartStationName"
  .. ..- attr(*, "indices")=List of 781
  .. .. ..$ : int [1:191] 0 1 2 3 4 5 6 7 8 9 ...
  .. .. ..$ : int [1:55] 191 192 193 194 195 196 197 198 199 200 ...
  .. .. ..$ : int [1:101] 246 247 248 249 250 251 252 253 254 255 ...
  .. .. ..$ : int [1:31] 347 348 349 350 351 352 353 354 355 356 ...
  .. .. ..$ : int [1:235] 378 379 380 381 382 383 384 385 386 387 ...
  .. .. ..$ : int [1:97] 613 614 615 616 617 618 619 620 621 622 ...
  .. .. ..$ : int [1:70] 710 711 712 713 714 715 716 717 718 719 ...
  .. .. ..$ : int [1:61] 780 781 782 783 784 785 786 787 788 789 ...
  .. .. ..$ : int [1:152] 841 842 843 844 845 846 847 848 849 850 ...
  .. .. ..$ : int [1:67] 993 994 995 996 997 998 999 1000 1001 1002 ...
  .. .. ..$ : int [1:115] 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 ...
  .. .. ..$ : int [1:115] 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 ...
  .. .. ..$ : int [1:165] 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 ...
  .. .. ..$ : int [1:140] 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 ...
  .. .. ..$ : int [1:135] 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604 ...
  .. .. ..$ : int [1:304] 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 ...
  .. .. ..$ : int [1:122] 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 ...
  .. .. ..$ : int [1:156] 2156 2157 2158 2159 2160 2161 2162 2163 2164 2165 ...
  .. .. ..$ : int [1:190] 2312 2313 2314 2315 2316 2317 2318 2319 2320 2321 ...
  .. .. ..$ : int [1:179] 2502 2503 2504 2505 2506 2507 2508 2509 2510 2511 ...
  .. .. ..$ : int [1:115] 2681 2682 2683 2684 2685 2686 2687 2688 2689 2690 ...
  .. .. ..$ : int [1:160] 2796 2797 2798 2799 2800 2801 2802 2803 2804 2805 ...
  .. .. ..$ : int [1:106] 2956 2957 2958 2959 2960 2961 2962 2963 2964 2965 ...
  .. .. ..$ : int [1:81] 3062 3063 3064 3065 3066 3067 3068 3069 3070 3071 ...
  .. .. ..$ : int [1:51] 3143 3144 3145 3146 3147 3148 3149 3150 3151 3152 ...
  .. .. ..$ : int [1:114] 3194 3195 3196 3197 3198 3199 3200 3201 3202 3203 ...
  .. .. ..$ : int [1:149] 3308 3309 3310 3311 3312 3313 3314 3315 3316 3317 ...
  .. .. ..$ : int [1:117] 3457 3458 3459 3460 3461 3462 3463 3464 3465 3466 ...
  .. .. ..$ : int [1:170] 3574 3575 3576 3577 3578 3579 3580 3581 3582 3583 ...
  .. .. ..$ : int [1:91] 3744 3745 3746 3747 3748 3749 3750 3751 3752 3753 ...
  .. .. ..$ : int [1:105] 3835 3836 3837 3838 3839 3840 3841 3842 3843 3844 ...
  .. .. ..$ : int [1:136] 3940 3941 3942 3943 3944 3945 3946 3947 3948 3949 ...
  .. .. ..$ : int [1:111] 4076 4077 4078 4079 4080 4081 4082 4083 4084 4085 ...
  .. .. ..$ : int [1:121] 4187 4188 4189 4190 4191 4192 4193 4194 4195 4196 ...
  .. .. ..$ : int [1:313] 4308 4309 4310 4311 4312 4313 4314 4315 4316 4317 ...
  .. .. ..$ : int [1:96] 4621 4622 4623 4624 4625 4626 4627 4628 4629 4630 ...
  .. .. ..$ : int [1:57] 4717 4718 4719 4720 4721 4722 4723 4724 4725 4726 ...
  .. .. ..$ : int [1:123] 4774 4775 4776 4777 4778 4779 4780 4781 4782 4783 ...
  .. .. ..$ : int [1:71] 4897 4898 4899 4900 4901 4902 4903 4904 4905 4906 ...
  .. .. ..$ : int [1:82] 4968 4969 4970 4971 4972 4973 4974 4975 4976 4977 ...
  .. .. ..$ : int [1:165] 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 ...
  .. .. ..$ : int [1:172] 5215 5216 5217 5218 5219 5220 5221 5222 5223 5224 ...
  .. .. ..$ : int [1:79] 5387 5388 5389 5390 5391 5392 5393 5394 5395 5396 ...
  .. .. ..$ : int [1:244] 5466 5467 5468 5469 5470 5471 5472 5473 5474 5475 ...
  .. .. ..$ : int [1:242] 5710 5711 5712 5713 5714 5715 5716 5717 5718 5719 ...
  .. .. ..$ : int [1:169] 5952 5953 5954 5955 5956 5957 5958 5959 5960 5961 ...
  .. .. ..$ : int [1:91] 6121 6122 6123 6124 6125 6126 6127 6128 6129 6130 ...
  .. .. ..$ : int [1:196] 6212 6213 6214 6215 6216 6217 6218 6219 6220 6221 ...
  .. .. ..$ : int [1:127] 6408 6409 6410 6411 6412 6413 6414 6415 6416 6417 ...
  .. .. ..$ : int [1:125] 6535 6536 6537 6538 6539 6540 6541 6542 6543 6544 ...
  .. .. ..$ : int [1:79] 6660 6661 6662 6663 6664 6665 6666 6667 6668 6669 ...
  .. .. ..$ : int [1:225] 6739 6740 6741 6742 6743 6744 6745 6746 6747 6748 ...
  .. .. ..$ : int [1:209] 6964 6965 6966 6967 6968 6969 6970 6971 6972 6973 ...
  .. .. ..$ : int [1:247] 7173 7174 7175 7176 7177 7178 7179 7180 7181 7182 ...
  .. .. ..$ : int [1:170] 7420 7421 7422 7423 7424 7425 7426 7427 7428 7429 ...
  .. .. ..$ : int [1:124] 7590 7591 7592 7593 7594 7595 7596 7597 7598 7599 ...
  .. .. ..$ : int [1:92] 7714 7715 7716 7717 7718 7719 7720 7721 7722 7723 ...
  .. .. ..$ : int [1:174] 7806 7807 7808 7809 7810 7811 7812 7813 7814 7815 ...
  .. .. ..$ : int [1:133] 7980 7981 7982 7983 7984 7985 7986 7987 7988 7989 ...
  .. .. ..$ : int [1:378] 8113 8114 8115 8116 8117 8118 8119 8120 8121 8122 ...
  .. .. ..$ : int [1:166] 8491 8492 8493 8494 8495 8496 8497 8498 8499 8500 ...
  .. .. ..$ : int [1:154] 8657 8658 8659 8660 8661 8662 8663 8664 8665 8666 ...
  .. .. ..$ : int [1:181] 8811 8812 8813 8814 8815 8816 8817 8818 8819 8820 ...
  .. .. ..$ : int [1:183] 8992 8993 8994 8995 8996 8997 8998 8999 9000 9001 ...
  .. .. ..$ : int [1:188] 9175 9176 9177 9178 9179 9180 9181 9182 9183 9184 ...
  .. .. ..$ : int [1:237] 9363 9364 9365 9366 9367 9368 9369 9370 9371 9372 ...
  .. .. ..$ : int [1:82] 9600 9601 9602 9603 9604 9605 9606 9607 9608 9609 ...
  .. .. ..$ : int [1:110] 9682 9683 9684 9685 9686 9687 9688 9689 9690 9691 ...
  .. .. ..$ : int [1:295] 9792 9793 9794 9795 9796 9797 9798 9799 9800 9801 ...
  .. .. ..$ : int [1:138] 10087 10088 10089 10090 10091 10092 10093 10094 10095 10096 ...
  .. .. ..$ : int [1:33] 10225 10226 10227 10228 10229 10230 10231 10232 10233 10234 ...
  .. .. ..$ : int [1:151] 10258 10259 10260 10261 10262 10263 10264 10265 10266 10267 ...
  .. .. ..$ : int [1:203] 10409 10410 10411 10412 10413 10414 10415 10416 10417 10418 ...
  .. .. ..$ : int [1:96] 10612 10613 10614 10615 10616 10617 10618 10619 10620 10621 ...
  .. .. ..$ : int [1:101] 10708 10709 10710 10711 10712 10713 10714 10715 10716 10717 ...
  .. .. ..$ : int [1:142] 10809 10810 10811 10812 10813 10814 10815 10816 10817 10818 ...
  .. .. ..$ : int [1:284] 10951 10952 10953 10954 10955 10956 10957 10958 10959 10960 ...
  .. .. ..$ : int [1:127] 11235 11236 11237 11238 11239 11240 11241 11242 11243 11244 ...
  .. .. ..$ : int [1:130] 11362 11363 11364 11365 11366 11367 11368 11369 11370 11371 ...
  .. .. ..$ : int [1:142] 11492 11493 11494 11495 11496 11497 11498 11499 11500 11501 ...
  .. .. ..$ : int [1:87] 11634 11635 11636 11637 11638 11639 11640 11641 11642 11643 ...
  .. .. ..$ : int [1:199] 11721 11722 11723 11724 11725 11726 11727 11728 11729 11730 ...
  .. .. ..$ : int [1:178] 11920 11921 11922 11923 11924 11925 11926 11927 11928 11929 ...
  .. .. ..$ : int [1:152] 12098 12099 12100 12101 12102 12103 12104 12105 12106 12107 ...
  .. .. ..$ : int [1:113] 12250 12251 12252 12253 12254 12255 12256 12257 12258 12259 ...
  .. .. ..$ : int [1:212] 12363 12364 12365 12366 12367 12368 12369 12370 12371 12372 ...
  .. .. ..$ : int [1:197] 12575 12576 12577 12578 12579 12580 12581 12582 12583 12584 ...
  .. .. ..$ : int [1:120] 12772 12773 12774 12775 12776 12777 12778 12779 12780 12781 ...
  .. .. ..$ : int [1:103] 12892 12893 12894 12895 12896 12897 12898 12899 12900 12901 ...
  .. .. ..$ : int [1:102] 12995 12996 12997 12998 12999 13000 13001 13002 13003 13004 ...
  .. .. ..$ : int [1:169] 13097 13098 13099 13100 13101 13102 13103 13104 13105 13106 ...
  .. .. ..$ : int [1:157] 13266 13267 13268 13269 13270 13271 13272 13273 13274 13275 ...
  .. .. ..$ : int [1:118] 13423 13424 13425 13426 13427 13428 13429 13430 13431 13432 ...
  .. .. ..$ : int [1:168] 13541 13542 13543 13544 13545 13546 13547 13548 13549 13550 ...
  .. .. ..$ : int [1:151] 13709 13710 13711 13712 13713 13714 13715 13716 13717 13718 ...
  .. .. ..$ : int [1:90] 13860 13861 13862 13863 13864 13865 13866 13867 13868 13869 ...
  .. .. ..$ : int [1:223] 13950 13951 13952 13953 13954 13955 13956 13957 13958 13959 ...
  .. .. ..$ : int [1:198] 14173 14174 14175 14176 14177 14178 14179 14180 14181 14182 ...
  .. .. ..$ : int [1:75] 14371 14372 14373 14374 14375 14376 14377 14378 14379 14380 ...
  .. .. .. [list output truncated]
  .. ..- attr(*, "drop")= logi TRUE
  .. ..- attr(*, "group_sizes")= int [1:781] 191 55 101 31 235 97 70 61 152 67 ...
  .. ..- attr(*, "biggest_group_size")= int 378
 $ bikeUsage        :Classes 'tbl_df', 'tbl' and 'data.frame':	10211 obs. of  4 variables:
  ..$ BikeId            : int [1:10211] 141 143 255 647 800 881 992 1010 1192 1204 ...
  ..$ NumberOfRentals   : int [1:10211] 1 1 1 1 1 1 1 1 1 1 ...
  ..$ averageJourneyTime: num [1:10211] 5 61 12 2 19 9 18 19 14 4 ...
  ..$ totalJourneyTime  : num [1:10211] 5 61 12 2 19 9 18 19 14 4 ...
  ..- attr(*, "na.action")=Class 'omit'  Named int [1:3181] 37 218 221 327 433 606 710 889 1008 1033 ...
  .. .. ..- attr(*, "names")= chr [1:3181] "37" "218" "221" "327" ...
 $ stationStats     :Classes 'tbl_df', 'tbl' and 'data.frame':	781 obs. of  3 variables:
  ..$ Station        : Factor w/ 781 levels "Abbey Orchard Street, Westminster",..: 435 389 137 282 124 628 162 399 428 330 ...
  ..$ averageTripTime: num [1:781] 15 3.5 21 18.3 33.8 ...
  ..$ TotalTrips     : int [1:781] 1 2 14 20 26 26 30 33 43 44 ...
  ..- attr(*, "na.action")=Class 'omit'  Named int [1:3181] 37 218 221 327 433 606 710 889 1008 1033 ...
  .. .. ..- attr(*, "names")= chr [1:3181] "37" "218" "221" "327" ...
 $ station_locations:Classes 'tbl_df', 'tbl' and 'data.frame':	781 obs. of  3 variables:
  ..$ Station: chr [1:781] "Abbey Orchard Street, Westminster" "Abbotsbury Road, Holland Park" "Aberdeen Place, St. John's Wood" "Aberfeldy Street, Poplar" ...
  ..$ lon    : num [1:781] -0.12997 -0.20655 -0.17589 -0.00589 -0.1258 ...
  ..$ lat    : num [1:781] 51.5 51.5 51.5 51.5 51.5 ...
 - attr(*, "class")= chr "biker"
}
\details{
%%  ~~ If necessary, more details than the __description__ above ~~
}
\source{
%%  ~~ reference to a publication or URL from which the data were obtained ~~
}
\references{
%%  ~~ possibly secondary sources and usages ~~
}
\examples{
data(ans1)
## maybe str(ans1) ; plot(ans1) ...
}
\keyword{datasets}
